{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Desktop/exchange-rate/src/componments/ExchangeReact.js\";\nimport React, { Component } from \"react\";\nexport default class Exchange extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount1: 1,\n      amount2: 0,\n      c1: \"USD\",\n      c2: \"CNY\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        amount1: e.target.value\n      });\n    };\n\n    this.setCurrency1 = e => {\n      this.setState({\n        c1: e.target.value\n      });\n    };\n\n    this.setCurrency2 = e => {\n      this.setState({\n        c2: e.target.value\n      });\n    };\n\n    this.Swich = () => {\n      this.setState({\n        c1: this.state.c2,\n        c2: this.state.c1\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`).then(response => response.json()).then(data => this.setState({\n      amount2: data.rates[this.state.c2]\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevState !== this.state) {\n      fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`).then(response => response.json()).then(data => this.setState(state => ({\n        amount2: data.rates[this.state.c2] * state.amount1\n      })));\n    }\n  }\n\n  render() {\n    const {\n      amount1,\n      amount2,\n      c1,\n      c2\n    } = this.props.currency;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.props.setCurrency1,\n      id: \"currency-one\",\n      value: c1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      value: \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"CNY\")), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"number\",\n      value: this.state.amount1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"swap-rate-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"swap\",\n      onClick: this.Swich,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Swap\"), React.createElement(\"div\", {\n      className: \"rate\",\n      id: \"rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      onChange: this.props.setCurrency2,\n      id: \"currency-one\",\n      value: c2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"CNY\"), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"USD\")), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"0\",\n      value: this.state.amount2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/bobo/Desktop/exchange-rate/src/componments/ExchangeReact.js"],"names":["React","Component","Exchange","state","amount1","amount2","c1","c2","handleChange","e","setState","target","value","setCurrency1","setCurrency2","Swich","componentDidMount","fetch","then","response","json","data","rates","componentDidUpdate","prevProps","prevState","render","props","currency"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Exchange extends Component {\n  state = {\n    amount1: 1,\n    amount2: 0,\n    c1: \"USD\",\n    c2: \"CNY\"\n  };\n  handleChange = e => {\n    this.setState({\n      amount1: e.target.value\n    });\n  };\n\n  setCurrency1 = e => {\n    this.setState({\n      c1: e.target.value\n    });\n  };\n\n  setCurrency2 = e => {\n    this.setState({\n      c2: e.target.value\n    });\n  };\n\n  Swich = () => {\n    this.setState({\n      c1: this.state.c2,\n      c2: this.state.c1\n    });\n  };\n\n  componentDidMount() {\n    fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`)\n      .then(response => response.json())\n      .then(data => this.setState({ amount2: data.rates[this.state.c2] }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevState !== this.state) {\n      fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`)\n        .then(response => response.json())\n        .then(data =>\n          this.setState(state => ({\n            amount2: data.rates[this.state.c2] * state.amount1\n          }))\n        );\n    }\n  }\n\n  render() {\n    const { amount1, amount2, c1, c2 } = this.props.currency;\n\n    return (\n      <div>\n        <select onChange={this.props.setCurrency1} id=\"currency-one\" value={c1}>\n          <option value=\"USD\">USD</option>\n          <option value=\"CNY\">CNY</option>\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"number\"\n          value={this.state.amount1}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"swap-rate-container\">\n          <button className=\"btn\" id=\"swap\" onClick={this.Swich}>\n            Swap\n          </button>\n          <div className=\"rate\" id=\"rate\"></div>\n        </div>\n        <select onChange={this.props.setCurrency2} id=\"currency-one\" value={c2}>\n          <option value=\"CNY\">CNY</option>\n          <option value=\"USD\">USD</option>\n        </select>\n        {/* {this.state.amount1},\n                {this.state.amount2} */}\n\n        <input type=\"number\" placeholder=\"0\" value={this.state.amount2} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}