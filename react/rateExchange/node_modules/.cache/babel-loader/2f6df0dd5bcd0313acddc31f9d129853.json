{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Desktop/exchange-rate/src/componments/Exchange.js\";\nimport React, { Component } from \"react\";\nimport { getAmount2, changeAmount1 } from \"../actions/actions\";\nimport { connect } from \"react-redux\";\n\nclass Exchange extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {// this.setState({\n      //   amount1: e.target.value\n      // });\n    };\n\n    this.setCurrency1 = e => {// this.setState({\n      //   c1: e.target.value\n      // });\n    };\n\n    this.setCurrency2 = e => {// this.setState({\n      //   c2: e.target.value\n      // });\n    };\n\n    this.Swich = () => {// this.setState({\n      //   c1: this.state.c2,\n      //   c2: this.state.c1\n      // });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAmount2();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevProps !== this.props) {\n      this.props.getAmount2();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.setCurrency1,\n      id: \"currency-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.currency.c1), React.createElement(\"option\", {\n      value: \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.currency.c2)), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"number\",\n      value: this.props.currency.amount1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"swap-rate-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"swap\",\n      onClick: this.Swich,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Swap\"), React.createElement(\"div\", {\n      className: \"rate\",\n      id: \"rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      onChange: this.setCurrency2,\n      id: \"currency-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.currency.c2), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.currency.c1)), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"0\",\n      value: this.props.currency.amount2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currency: state.currency\n});\n\nexport default connect(mapStateToProps, {\n  getAmount2,\n  changeAmount1\n})(Exchange);","map":{"version":3,"sources":["/Users/bobo/Desktop/exchange-rate/src/componments/Exchange.js"],"names":["React","Component","getAmount2","changeAmount1","connect","Exchange","handleChange","e","setCurrency1","setCurrency2","Swich","componentDidMount","props","componentDidUpdate","prevProps","prevState","render","currency","c1","c2","amount1","amount2","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getAmount2, changeAmount1 } from \"../actions/actions\";\nimport { connect } from \"react-redux\";\n\nclass Exchange extends Component {\n  handleChange = e => {\n    // this.setState({\n    //   amount1: e.target.value\n    // });\n  };\n\n  setCurrency1 = e => {\n    // this.setState({\n    //   c1: e.target.value\n    // });\n  };\n\n  setCurrency2 = e => {\n    // this.setState({\n    //   c2: e.target.value\n    // });\n  };\n\n  Swich = () => {\n    // this.setState({\n    //   c1: this.state.c2,\n    //   c2: this.state.c1\n    // });\n  };\n\n  componentDidMount() {\n    this.props.getAmount2();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevProps !== this.props) {\n      this.props.getAmount2();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <select onChange={this.setCurrency1} id=\"currency-one\">\n          <option value=\"USD\">{this.props.currency.c1}</option>\n          <option value=\"CNY\">{this.props.currency.c2}</option>\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"number\"\n          value={this.props.currency.amount1}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"swap-rate-container\">\n          <button className=\"btn\" id=\"swap\" onClick={this.Swich}>\n            Swap\n          </button>\n          <div className=\"rate\" id=\"rate\"></div>\n        </div>\n        <select onChange={this.setCurrency2} id=\"currency-one\">\n          <option value=\"CNY\">{this.props.currency.c2}</option>\n          <option value=\"USD\">{this.props.currency.c1}</option>\n        </select>\n        {/* {this.state.amount1},\n                {this.state.amount2} */}\n\n        <input\n          type=\"number\"\n          placeholder=\"0\"\n          value={this.props.currency.amount2}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currency: state.currency\n});\n\nexport default connect(mapStateToProps, { getAmount2, changeAmount1 })(\n  Exchange\n);\n"]},"metadata":{},"sourceType":"module"}